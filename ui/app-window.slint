import { GridBox, LineEdit, CheckBox, Button, Slider } from "std-widgets.slint";

export component AppWindow inherits Window {

    //Generate callback
    callback generate_password(string);
    callback uppercase_password;
    callback lowercase_password;
    callback number_password;
    callback special_password;

    //Generated password variable
    in-out property <string> password;
    in-out property <string> long: value.text;
    in-out property <bool> upper: true;
    in-out property <bool> lower: false;
    in-out property <bool> num: false;
    in-out property <bool> spec: false;

    //Main app window layout
    width: 480px;
    height: 480px;
    title: @tr("Password generator");
    icon: @image-url("./icon.png");
    background: grey;

    GridLayout {
        spacing: 20px;
        padding: 10px;
        Row {
            Text {
                height: 80px;
                horizontal-alignment: center;
                vertical-alignment: center;
                text: "Password generator";
                color: darkgrey;
                font-size: 20pt;
                font-family: "Arial";
                colspan: 2;
            }
        }
        Row {
            generated := LineEdit {
                height: 60px;
                placeholder-text: "Password";
                text: password;
            }
            Button {
                height: 60px;
                text: "Copy";
                primary: true;
                clicked => {
                    generated.select-all(); //Select password text
                    generated.copy(); //Copy password to clipboard
                    debug("Copied"); //Console text
                }
            }
        }
        Row {
            Button {
                text: "Generate";
                primary: true;
                height: 60px;
                colspan: 2;
                clicked => {
                    generate_password(long);
                }
            }
        }
        Row {
            Text {
                text: "Password length:";
                height: 30px;
                font-size: 14px;
                font-weight: 100;
                vertical-alignment: center;
                horizontal-alignment: left;
                value := LineEdit {
                    text: 16;
                    height: 20px;
                    width: 40px;
                    input-type: number;
                    horizontal-alignment: center;
                    edited => {
                        generate_password(long);
                    }
            }
            }
        }
        Row {
            CheckBox {
                text: "Uppercase";
                checked: upper;
                toggled => {
                    self.checked = true;
                    //uppercase_password();
                }
            }
        }
        Row {
            CheckBox {
                text: "Lowercase";
                checked: lower;
                toggled => {
                    self.checked = true;
                    lowercase_password();
                }
            }
        }
        Row {
            CheckBox {
                text: "Numbers";
                checked: num;
                toggled => {
                    self.checked = true;
                    number_password();
                }
            }
        }
        Row {
            CheckBox {
                text: "Special characters";
                checked: spec;
                toggled => {
                    self.checked = true;
                    special_password();
                }
            }
        }
    }
}